dataset1 <- read_csv('../Datos/DatosReales/EXCEL PRIMER FORMULARIO - 01 Percepciones del uso, FOMO y tiempo de uso real de Instagram en jóvenes argentinos.csv')
library(tidyverse)
library(tidyverse)
install.packages('rlang')
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
library(tidyverse)
version
install.packages("https://cran.r-project.org/src/contrib/Archive/rlang/rlang_1.0.5.tar.gz", repos = NULL, type="source")
install.packages("https://cran.r-project.org/src/contrib/Archive/rlang/rlang_1.0.5.tar.gz", repos = NULL, type="source")
install.packages("https://cran.r-project.org/src/contrib/rlang_1.0.5.tar.gz", repos = NULL, type="source")
library(tidyverse)
library(tidyverse)
remove.packages("rlang")
install.packages('rlang')
install.packages("rlang")
update.packages(ask = FALSE)
library(tidyverse)
remove.packages('tidyverse')
install.packages('tidyverse')
library(tidyverse)
library(tidyverse)
install.packages('rlang')
install.packages("rlang")
install.packages("rlang")
library(tidyverse)
dataset1 <- read_csv('../Datos/DatosReales/EXCEL PRIMER FORMULARIO - 01 Percepciones del uso, FOMO y tiempo de uso real de Instagram en jóvenes argentinos.csv')
dataset2 <- read_csv('../Datos/DatosReales/EXCEL (respuestas) - Respuestas de formulario 1.csv')
dataset1$`Por último, sería de mucha utilidad para el estudio que pudieras dejarnos tu usuario de Instagram. Este paso es completamente OPCIONAL. Recordá que los datos obtenidos tienen carácter de confidencialidad, respaldados por esta investigación sólo para fines académicos. Ningún dato personal de tu identidad será compartido o difundido. Muchísimas gracias por tu participación!`
dataset2$`Por último, sería de mucha utilidad para el estudio que pudieras dejarnos tu usuario de Instagram. Este paso es completamente OPCIONAL. Recordá que los datos obtenidos tienen carácter de confidencialidad, respaldados por esta investigación sólo para fines académicos. Ningún dato personal de tu identidad será compartido o difundido. Muchísimas gracias por tu participación!`
library(Hmisc)
library(tidyverse)
library(corrplot)
library(GGally)
library(boot)
library(psych)
library(ggridges)
spam <- rbind(
read_csv('../../Datos/DatosReales/EXCEL (respuestas) - Respuestas de formulario 1.csv') %>%
select(starts_with('Por favor, indicá')),
read_csv('../../Datos/DatosReales/EXCEL PRIMER FORMULARIO - 01 Percepciones del uso, FOMO y tiempo de uso real de Instagram en jóvenes argentinos.csv') %>%
select(starts_with('Por favor, indicá'))
) %>%
drop_na(everything())
spam <- dataset_combinado_prepro %>%
select(A1:P3) %>%
drop_na()
spam <- dataset_combinado_prepro %>%
select(A1:P3) %>%
drop_na()
?boot.ci
library(tidyverse)
dataset1 <- read_csv('../Datos/DatosReales/EXCEL PRIMER FORMULARIO - 01 Percepciones del uso, FOMO y tiempo de uso real de Instagram en jóvenes argentinos.csv')
dataset2 <- read_csv('../Datos/DatosReales/EXCEL (respuestas) - Respuestas de formulario 1.csv')
dataset1_clean <- dataset1 %>%
rename(
'Error_pub' = 'Error...11', #bool que marca un error en el reporte de la cantidad de publicaciones
'Correccion_pub' = 'Corrección...12', #string que marca una coreccion en el reporte de la cantidad de publicaciones
'Error_followers' = 'Error...15', #bool que marca un error en el reporte de la cantidad de seguidores
'Correccion_followers' = 'Corrección...16', #string que marca una correccion en el reporte de la cantidad de seguidores
'Error_following' = 'Error...19', #bool que marca un error en el reporte de la cantidad de personas que siguen con su cuenta
'Correccion_following' = 'Corrección...20', #string que marca una correccion en el reporte de la cantidad de personas que siguen con su cuenta
'Error_general' = 'Error...50' #bool que marca un error en algun punto para ese sujeto
)
dataset1_clean <- dataset1_clean %>%
select(!starts_with('Error')) %>% select(!starts_with('Correccion')) %>% select(!ends_with('Error'))
dataset1_clean <- dataset1_clean %>%
select(
!c(`Hasta la fecha, ¿cuántas publicaciones tenés en tu cuenta personal?`,
`¿Cuántos seguidores tenés?`,
`¿A cuántas cuentas seguís?`)
)
colnames(dataset1_clean) <- str_replace(colnames(dataset1_clean), 'Duplicado', '') %>% str_trim()
ncol(dataset1_clean) == ncol(dataset2)
#columnas_extra <-
colnames(dataset1_clean)[!colnames(dataset1_clean) %in% colnames(dataset2)]
colnames(dataset2)[!colnames(dataset2) %in% colnames(dataset1_clean)]
dataset1_clean <- dataset1_clean %>%
select(
!c(
"A continuación, encontrarás afirmaciones sobre algunas experiencias del día a día. Usando la escala de 1-5, por favor indica en qué medida se ajustan estas afirmaciones a vos, dada tu experiencia en general. Por favor responde aquello que realmente refleje tu situación y no lo que pienses que debería ser. Por favor, considerá cada pregunta por separado.",
"Ahora te solicitamos que ingreses en tu perfil PERSONAL de Instagram (no puede ser una cuenta utilizada para fines laborales, como por ejemplo un emprendimiento, u otros fines). Una vez que ingreses, por favor seguí los siguientes pasos:"
)
)
dataset2_clean <- dataset2 %>%
select(!contains('Error'))
dataset1_clean <- dataset1_clean %>%
rename(
"Actualmente, ¿tenés cuenta en Instagram?" = "Actualmente, ¿tenés una cuenta en Instagram?",
"Promedio Diario" = "Datos Screenshots",
"Por último, sería de mucha utilidad que pudieras dejarnos tu usuario de Instagram. Esto es completamente OPCIONAL. Recordá que los datos obtenidos tienen carácter de confidencialidad, respaldados por esta investigación solo con fines académicos. Ningún dato personal de tu identidad será compartido ni publicado. Gracias por tu participación!" = "Por último, sería de mucha utilidad para el estudio que pudieras dejarnos tu usuario de Instagram. Este paso es completamente OPCIONAL. Recordá que los datos obtenidos tienen carácter de confidencialidad, respaldados por esta investigación sólo para fines académicos. Ningún dato personal de tu identidad será compartido o difundido. Muchísimas gracias por tu participación!",
"Si no pudiste adjuntar el screenshot, por favor escribí tu Promedio Diario de uso. Ejemplo: 01:10" = "Si no pudiste adjuntar el screenshot, por favor escribí el tu Promedio Diario de uso. Ejemplo: 1 hs 30 min"
)
dataset1_clean <- dataset1_clean %>%
rename(
inicio_fomo = `A veces me pregunto si le dedico demasiado tiempo a estar pendiente de lo que está pasando.`,
fin_fomo = `Cuando la paso bien, es importante para mí compartir los detalles en línea (p.ej. actualizando el estado).`
)
dataset2_clean <- dataset2_clean %>%
rename(
inicio_fomo = `A veces me pregunto si le dedico demasiado tiempo a estar pendiente de lo que está pasando.`,
fin_fomo = `Cuando la paso bien, es importante para mí compartir los detalles en línea (p.ej. actualizando el estado).`
)
dataset1_clean <- dataset1_clean %>%
mutate(
across(inicio_fomo:fin_fomo, str_extract, pattern = '\\d'),
across(inicio_fomo:fin_fomo, as.integer)
)
fomo_maping <- c(
"Nada" = "1",
"Un poco" = "2",
"Moderadamente" = "3",
"Bastante" = "4",
"Mucho" = "5"
)
dataset2_clean <- dataset2_clean %>%
mutate(
across(inicio_fomo:fin_fomo, str_replace_all, pattern = fomo_maping),
across(inicio_fomo:fin_fomo, as.integer)
)
dataset1_clean <- dataset1_clean %>% mutate(`Promedio Diario` = parse_time(`Promedio Diario`))
dataset_combinado <- rbind(
dataset1_clean,
dataset2_clean
)
dataset_combinado_prepro <- dataset_combinado %>%
mutate(
fomo_puntaje = rowSums(across(inicio_fomo:fin_fomo)),
fomo_relativo = fomo_puntaje/50
)
dataset_combinado_prepro <- dataset_combinado_prepro %>%
mutate(across(starts_with('Por favor, indicá'), .fns =str_extract, pattern = '\\d'),
across(starts_with('Por favor, indicá'), .fns = as.integer)) %>%
rename(
"A1" = "Por favor, indicá cuánto tiempo pasas en cada una de estas actividades al usar Instagram, siendo 0: Nada y 5: Todo el tiempo. [Mandarme mensajes con amigos, familiares, conocidos]",
"P1" = "Por favor, indicá cuánto tiempo pasas en cada una de estas actividades al usar Instagram, siendo 0: Nada y 5: Todo el tiempo. [Mirar las publicaciones/historias de otras personas]",
"P2" = "Por favor, indicá cuánto tiempo pasas en cada una de estas actividades al usar Instagram, siendo 0: Nada y 5: Todo el tiempo. [Navegar en el inicio de Instagram]",
"A2" = "Por favor, indicá cuánto tiempo pasas en cada una de estas actividades al usar Instagram, siendo 0: Nada y 5: Todo el tiempo. [Publicar fotos/videos en el perfil o historias]",
"A3" = "Por favor, indicá cuánto tiempo pasas en cada una de estas actividades al usar Instagram, siendo 0: Nada y 5: Todo el tiempo. [Darle \"like\" a publicaciones o historias de otras personas]",
"A4" = "Por favor, indicá cuánto tiempo pasas en cada una de estas actividades al usar Instagram, siendo 0: Nada y 5: Todo el tiempo. [Comentar publicaciones o historias]",
"P3" = "Por favor, indicá cuánto tiempo pasas en cada una de estas actividades al usar Instagram, siendo 0: Nada y 5: Todo el tiempo. [Mirar el feed de noticias y/o buscar información]"
)
dataset_combinado_prepro <- dataset_combinado_prepro %>%
rename(
"publicaciones" = "Hasta la fecha, ¿cuántas publicaciones tenés en tu cuenta personal?",
"followers" = "¿Cuántos seguidores tenés?",
"following" = "¿A cuántas cuentas seguís?",
"selfperception_cat" = "En la última semana, en promedio, ¿cuánto tiempo por día crees que pasaste usando Instagram?",
"selfperception_num" = "En la última semana, en promedio, ¿cuánto tiempo por día crees que pasaste usando Instagram? (Por ejemplo: Si creés que la usaste en promedio 1hs 30 min por día, poné 01:30)",
"selfperception_confidence" = "¿Con qué nivel de confianza creés que pudiste determinar correctamente la cantidad de tiempo que usas Instagram?",
"otherperception_cat" = "En la última semana, en promedio, ¿cuánto tiempo por día crees que las personas de tu misma edad pasaron usando Instagram?",
"otherperception_num" = "En la última semana, en promedio, ¿cuántas horas por día crees que las personas de tu misma edad pasaron usando Instagram? (Por ejemplo: Si creés que lo usaron en promedio 1hs 30 min por día, poné 01:30)",
"otherperception_confidence" = "¿Con qué nivel de confianza creés que pudiste determinar correctamente la cantidad de tiempo que las personas de tu edad usan Instagram?",
"uso_screnshot" = "Promedio Diario",
"uso_autoreporte" = "Si no pudiste adjuntar el screenshot, por favor escribí tu Promedio Diario de uso. Ejemplo: 01:10",
"cuenta" = "Por último, sería de mucha utilidad que pudieras dejarnos tu usuario de Instagram. Esto es completamente OPCIONAL. Recordá que los datos obtenidos tienen carácter de confidencialidad, respaldados por esta investigación solo con fines académicos. Ningún dato personal de tu identidad será compartido ni publicado. Gracias por tu participación!"
)
dataset_combinado_prepro <- dataset_combinado_prepro %>% mutate(
publicaciones = as.integer(publicaciones),
following = as.integer(following),
selfperception_num = as.double(selfperception_num),
otherperception_num = as.double(otherperception_num),
uso_screnshot = as.double(uso_screnshot)
)
spam <- dataset_combinado_prepro %>%
select(A1:P3) %>%
drop_na()
library(Hmisc)
library(tidyverse)
library(corrplot)
library(GGally)
library(boot)
library(psych)
library(ggridges)
spam <- rbind(
read_csv('../../Datos/DatosReales/EXCEL (respuestas) - Respuestas de formulario 1.csv') %>%
select(starts_with('Por favor, indicá')),
read_csv('../../Datos/DatosReales/EXCEL PRIMER FORMULARIO - 01 Percepciones del uso, FOMO y tiempo de uso real de Instagram en jóvenes argentinos.csv') %>%
select(starts_with('Por favor, indicá'))
) %>%
drop_na(everything())
spam <- dataset_combinado_prepro %>%
select(A1:P3) %>%
drop_na()
ggpairs(spam,
upper = list(continuous = "density", combo = "box_no_facet"),
lower = list(continuous = wrap("points", position=position_jitter(height= .3, width=.3)), combo = "dot_no_facet"))
spam %>% pivot_longer(cols = everything(), names_to = 'Var', values_to = 'Res') %>%
ggplot(
aes(x = Res, y = Var, fill = Res)
) +
geom_density_ridges(
)
resumen_actividad <- spam %>%
rowwise() %>%
transmute(
media_activo = mean(
c(A1,A2,A3,A4)
),
media_pasivo = mean(
c(P1,P2,P3)
),
mediana_activo = median(
c(A1,A2,A3,A4)
),
mediana_pasivo = median(
c(P1,P2,P3)
)
)
ggplot(
resumen_actividad,
aes(x = media_activo, y = media_pasivo)
) +
geom_jitter(width = 0.025) +
geom_smooth(se = F) + geom_smooth(method = 'lm', color = 'red', se = F) +
geom_density_2d(color = 'grey') +
theme_classic()
ggplot(
resumen_actividad,
aes(x = mediana_activo, y = mediana_pasivo)
) +
geom_jitter(width = 0.025) +
geom_smooth(se = F) + geom_smooth(method = 'lm', color = 'red', se = F) +
geom_density_2d(color = 'grey') +
theme_classic()
cor(spam, method = 'spearman') %>% corrplot(method = 'ellipse', type = 'upper', addCoef.col = 'black')
cor(spam, method = 'kendall') %>% corrplot(method = 'ellipse', type = 'upper', addCoef.col = 'black')
polychoric(x = spam)$rho %>%
corrplot(method = 'ellipse', type = 'upper', addCoef.col = 'black')
gamma_matrix <- expand.grid(colnames(spam), colnames(spam)) %>% tibble() %>%
rowwise() %>%
mutate(
correlacion = rcorr.cens(spam[[Var1]], spam[[Var2]], outx = TRUE)['Dxy']
) %>%
pull(correlacion) %>%
matrix(nrow = ncol(spam), ncol = ncol(spam))
colnames(gamma_matrix) <- colnames(spam)
rownames(gamma_matrix) <- colnames(spam)
gamma_matrix %>%
corrplot(method = 'ellipse', type = 'upper', addCoef.col = 'black')
all_corr <- function(vector_x, vector_y){
kendall_cor <- cor(vector_x, vector_y, method = 'kendall')
spearman_cor <- cor(vector_x, vector_y, method = 'spearman')
gamma_cor <- unname(rcorr.cens(vector_x, vector_y, outx = TRUE)['Dxy'])
c(kendall_cor, spearman_cor, gamma_cor)
}
all_comb <- expand.grid(
colnames(spam), colnames(spam)
)
all_corr_df <- all_comb %>%
pmap(
~ all_corr(spam[[.x]], spam[[.y]])
) %>% unlist() %>% matrix(nrow = 49, ncol = 3, byrow = TRUE) %>%
as.data.frame()
colnames(all_corr_df) <- c('Kendall', 'Spearman', 'Gamma')
all_comb_corr_df <- cbind(
all_comb,
all_corr_df
) %>%
filter(Kendall < 1 & Spearman < 1 & Gamma < 1)
ind_dup <- str_split(paste(all_comb_corr_df$Var1, all_comb_corr_df$Var2), ' ') %>%
lapply(
str_sort
) %>% unlist() %>%
matrix(ncol = 2, byrow = TRUE) %>%
as.data.frame() %>%
duplicated()
clean_comb_corr <- all_comb_corr_df[ind_dup, ]
clean_comb_corr %>%
unite('Var_comb', Var1:Var2, sep = '-') %>%
pivot_longer(Kendall:Gamma, names_to = 'tipo_cor', values_to = 'corr_val') %>%
ggplot(
aes(y = Var_comb, x = corr_val, color = tipo_cor)
) +
geom_point()
gamma_cor <- function(data, indices, variable1, variable2){
boot_data <- data[indices,]
vector_x <- boot_data[[variable1]]
vector_y <- boot_data[[variable2]]
unname(rcorr.cens(vector_x, vector_y, outx = TRUE)['Dxy'])
}
boot_results <- clean_comb_corr %>%
pmap(
~ boot(
data = spam,
statistic = gamma_cor,
R = 5000,
variable1 = .x,
variable2 = .y,
parallel = 'multicore',
ncpus = 4
)
)
poly_pca <- principal(spam, 7, rotate = 'none', cor = 'poly')
poly_pca
ggplot(
data = tibble(x = 1:7, y = poly_pca$Vaccounted[2,] * 100),
aes(x = x, y = y)
) +
geom_col(fill = 'deepskyblue3') +
geom_point() +
geom_line() +
xlab('Componentes') + ylab('Proporcion de la varianza explicada')
fa.parallel(spam %>% as.data.frame(), fm = 'pa', fa = 'pa', cor = 'poly')
biplot(poly_pca, choose = c(1,2))
